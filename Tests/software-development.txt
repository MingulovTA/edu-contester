11
Метрики, которые необходимо знать практически всегда, включают в себя:
объем выполненной работы
время, затраченное на выполнение работы
степень дефектности
Сравнение с результатами тестирования
Инспектирование
3
11100
Инспектирование - это техника...
Белого ящика
Чёрного ящика
Серого ящика
NULL
NULL
1
10000
Когда должно начинаться инспектирование?
С появлением документации
После тестирования
Во время тестирования
При внедрении
NULL
1
10000
Процесс построения приложений реальных размеров и практической значимости, удовлетворяющих заданным требованиям функциональности и производительности
Проектирование
Программирование
Разработка жизненного цикла ПО
Инспектирование
Пусконаладочные работы
1
10000
Что входит в понятие "программный продукт"?
Программный код
Отчёты
Диаграммы
Команда разработчиков
Финансы
3
11100
Требования к разработке ПО:
Заранее выбрать свою шка-лу измерения качества для проекта и продукта.
Сборе информации по всем проектам с целью создания базы для оценки будущих проектов
Ссе участники команды должны следовать избранному процессу разработки.
Разработка должна проходить под руководством единственного директора.
Программное обеспечение должно тестироваться в обязательном порядке
3
11100
Кто проводит инспектирование?
Группа коллег автора работы
Разработчики
Директор проекта
Заказчик
NULL
1
10000
Процесс инспектирования начинается с планирования. Что включает в себя планирование?
Выбор метрик
Выбор инструментов для сбора и анализа полученных данных
Тестирование программы
Выбор модели жизненного цикла
NULL
2
11000
При инспектировании должен ли быть организован обзорный семинар для лучшего понимания объекта инспектирования.
Да, всегда
Нет, только в случае крайней необходимости
NULL
NULL
NULL
1
01000
Основные этапы инспектирования:
Планирование
Подготовка
Инспекционное собрание
Обзорный семинар
Внедрение
3
11100
На какие вопросы отвечает Верификация и валидация?
“Делаем ли мы на данной фазе в точности то, что было запланировано в предыдущей фазе?”
“Отвечает ли построенный объект пожеланиям и нуждам заказчика?”
“Достаточно ли средств выделено для реализации проекта?“
“Какую модель жизненного цикла необходимо утвердить?“
“Следует ли назначить инспектирование?“
2
11000
Какие бывают модели жизненного цикла ПО?
Каскадная
Водопадная
Циклическая
Прямая
Последовательная
2
11000
Какие бывают модели жизненного цикла ПО?
Спиральная
Водопадная
Циклическая
Прямая
Инкрементарная
3
11001
Идеальную Водопадную модель ЖЦ характеризует:
Отсутствие возможности возвращаться к предыдущим этапам
Возможность пропускать ненужные этапы
Возможность возвращаться к предыдущим этапам
Сниженные риски
Простота управления
1
10000
Проектирование - это...
Анализ требований
Разработка проектных решений
Программирование базовых методов
Исследование проблемы, которая должна быть решена, с четким формулированием всех требований заказчика
Разработка программного обеспечения
1
01000
Сдача готового продукта. Главная задача этого этапа...
Убедить заказчика, что все его требования реализованы в полной мере.
Передача готового продукта заказчику
Пусконаладочные работы
NULL
NULL
1
10000
Когда принимается водопадная модель ЖЦ в чистом виде?
В случае небольших проектов
Если проект похож на предыдущие
Если на начальном этапе можно достаточно точно и полно сформулировать все требования
В случае крупных проектов
При наличии свободы выбора
3
11100
Достоинства каскадной модели ЖЦ?
на каждом этапе формируется законченный набор проектной документации
выполняемые в логичной последовательности этапы работ позволяют плани-ровать сроки завершения и соответствующие затраты
итерационная разработка существенно упрощает внесение изменений в про-ект при изменении требований заказчика;
уменьшение уровня рисков
позволяет получить более надежную и устойчивую си-стему
2
11000
Причины использования спиральной модели жизненного цикла:
Необходимость предупреждения рисков
Необходимость предоставить заказчику частичную версию проекта
Отсутствие финансирования
Плохая команда разработчиков
Сжатые сроки реализации
2
11000
Достоинства спиральной модели:
упрощает внесение изменений в про-ект при изменении требований заказчика
отдельные элементы информацион-ной системы интегрируются в единое целое постепенно.
уменьшение уровня рисков
на каждом этапе формируется законченный набор проектной документации, отвечающий критериям полноты и согласованности.
выполняемые в логичной последовательности этапы работ позволяют плани-ровать сроки завершения и соответствующие затраты
3
11100
Достоинства спиральной модели:
гибкость в управлении проектом
упрощает повторное использование компонентов
позволяет получить более надежную и устойчивую си-стему
на каждом этапе формируется законченный набор проектной документации, отвечающий критериям полноты и согласованности.
выполняемые в логичной последовательности этапы работ позволяют плани-ровать сроки завершения и соответствующие затраты
3
11100
Недостатки каскадной модели:
существенная задержка получения результатов
возврат на более ранние стадии
сложность параллельного ведения работ
трудность определения момента перехода на следующий этап
гибкость в управлении проектом
3
11100
Недостатки каскадной модели:
информационная перенасыщенность
сложность управления проектом
трудность определения момента перехода на следующий этап
гибкость в управлении проектом
NULL
3
11100
Какие трудности кроются за спиральной моделью ЖЦ?
Поддержка целостности документации 
Требует более искусного управления
Сжатые сроки
Невозможность вернуться к предыдущим этапам
сложность параллельного ведения работ
2
11000
Может ли очередная итерация процесса начинаеться до завершения предыдущей итерации?
Да
Нет
NULL
NULL
NULL
1
10000
Инкрементальная модель процесса разработки полезна
На ранних стадиях
В середине разработки
На поздних стадиях
NULL
NULL
1
00100
Лёгкость контроля документации присуща
Чистому водопадному процессу
Спиральному
Итерационному
Инкрементарному
NULL
1
10000
Тяжелее взаимодействовать с заказчиком в 
Каскадной модели ЖЦ
Спиральной модели ЖЦ
Итерационной
Инкрементарной
NULL
1
10000
Поддержание хорошего проектирования тяжелее всего для 
Каскадной модели ЖЦ
Спиральной модели ЖЦ
Итерационной
Инкрементарной
NULL
1
00010
Сбор метрических данных, собранных в ходе проекта легче всего для
Каскадной модели ЖЦ
Спиральной модели ЖЦ
Инкрементарной
NULL
NULL
2
01100
Нечто, что может появиться по ходу проекта, и это нечто в худшем случае может негативно повлиять на проект - это...
Риск
Проблема
Препятствие
Тестирование
NULL
1
10000
Управление риском состоит из нескольких действий:
Планирование устранения.
Выбор приоритетов.
Инспектирование
Тестирование
Анализ требований
2
11000
К факторами риска для простого проекта НЕ относится:
Невозможность привлечения пользователей.
Недостаточная вовлеченность в проект высшего руководства
Привлечение неадекватных пользователей.
Отсутствие требований
Отсутствие бюджекта
2
00011